1) add common folder
2) move models to common folder
3) add DataParserModel, it satisfy classes args for JsonConductor & DataParser
4) add DataParser common class witch: get http data, tag replacer, make next & last tours json, get_html_for_last_tour
5) add JsonConductor common class witch: operate with json write & read from file
6) add DataUtils common class witch: get host & gest commands & scores
7) add new file witch: inside will get data for all main championship
8) add type hint for common file


=======
MR debug_db
1) add db-extract-interface
2) add DataBaseReader guest_result & host_result methods for command
3) methods call drop to debug.py
!
main

v_seo_03
update NEAREST_SCHEDULE models
сгрумили задачи



TODO


Сделать индексы оценки команды
А.
1) получить данные всех матчей для команды хозяев {'host_stats_command':[{},{}]}
2) разделить тотал забитых голов на кол-во матчей ({'h_tot_gsc': 0})
3) разделить тотал пропущенных голов на кол-во матчей ({'h_tot_gusc': 0})
4) разделить забитые голы на пропущенные ({'h_tot_sc_usc': 0})
Б.
5) получить данные для гостевых матчей  {'guest_stats_command': [{},{}]}
6) разделить тотал забитых голов на кол-во матчей ({'g_tot_gsc': 0})
7) разделить тотал пропущенных голов на кол-во матчей ({'g_tot_gusc': 0})
8) разделить забитые голы на пропущенные ({'g_tot_sc_usc': 0})


v_seo_04                                                    +
Получать данные о событиях для всех лиг
1) добавить ссылки в массив
2) сделать цикл, удалить запись в тхт, лишние принты
3) исследовать как избавиться от промежуточной записи json

Next_task
v_seo_05
Добавить History data из debug_db в NEAREST_SCHEDULE
1) сделать методы, которые будут возвращать объект с интерфейсом DataDBReaderInterface
1.1) сделать маппинг команд  +
2) получить данные для команды хозяев и гостей  +
2.2) вынести дб & json логику из common                +
3) добавить генерацию NEAREST_SCHEDULE для каждой встречи +
3.1) вынести логику наполнеия моделей                  +
3.2) создать события для разных слоев                  +
4) добавить в history_host списки с результатами       +
4) добавить в history_guest списки с результатами      +


Next_task
Расширить NEAREST_SCHEDULE индексами оценки команды
1)Расширить модель NEAREST_SCHEDULE
2)использовать методы, которые будут возвращать объект с интерфейсом DataDBReaderInterface
3)получить данные для команды хозяев и гостей
исследовать и добавить в NEAREST_SCHEDULE индексы для каждой команды


Оценить данные на предмет использования в консоле
